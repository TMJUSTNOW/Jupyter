require(XLConnect)
require(knitr)
require(plyr)
# require(dplyr)
require(stringr)
require(reshape2)
require(ggplot2)
# Directory
setwd("C:/Users/Nicol/Google Drive/Learning/R Programming/Phase 1/Data")
# setwd("~/Google Drive/Learning/R Programming/Phase 1/Data")
# data <- read.csv("minifundcat.csv")
data <- read.csv("fullfundcat.csv")
#Socio-Economic Data
sample <- read.csv("samplesocecodata.csv", header=FALSE)
names(sample) <- as.character(sample[5,])
sample <- sample[-c(1:5),]
names(sample)[1:4] <- c("GeoFips","Geoname", "Linecode","Description")
sample <- droplevels(sample)
#USA
usa <- melt(subset(sample, Geoname == "United States"), id=c("GeoFips","Geoname","Linecode", "Description"))
#Fixing State Names
sample$Geoname <- revalue(sample$Geoname, c("Alaska*"="Alaska", "Hawaii*"="Hawaii"))
sample <- sample[! sample$Geoname %in% c("Rocky Mountain", "Far West", "Great Lakes","Mideast", "Southeast","Southwest","Plains", "United States","", "New England", "Rhode Island", "District of Columbia"),]
sample <- droplevels(sample)
# Convert from Name to Abbreviation
n <- NROW(sample$Geoname)
for(x in 1:n) {
sample$Abb[x] <- state.abb[grep(sample$Geoname[x], state.name)]
}
# sample[,c("Abb", "Geoname")]
# Melt
m.sample <- melt(sample, id=c("GeoFips","Geoname","Linecode", "Description", "Abb"))
head(m.sample)
# Dcast
names(m.sample)[names(m.sample) == 'Geoname'] <- 'STATE'
names(m.sample)[names(m.sample) == 'variable'] <- 'AUDITYEAR'
socio <- dcast(m.sample[,-3], Abb + AUDITYEAR + GeoFips + STATE ~ Description)
names(socio)[c(1,4,5,6,7)] <- c("STATE", "Geoname","Capita Income", "Personal_income", "Population")
head(socio)
# Add Socio Economic data to Fund Dataset
data <- merge(data, socio[socio$AUDITYEAR %in% c(2005:2009),], by = c("STATE", "AUDITYEAR"), all = TRUE, sort = FALSE)
data <- na.omit(data)
data$adj.amount <- data$AMOUNT/data$Population
head(data)
# State Year Per Capita Income
income.pc <- socio[,c(1,2,5)]
names(income.pc) [c(1:2)] <- c("State", "Year")
# Average Income by Year
annual_income.pc <- aggregate(income.pc$`Capita Income`, list(income.pc$Year), mean)
names(annual_income.pc) <- c("Year","Annual Income Per Capita")
head(annual_income.pc)
names(data)
# ggplot2 prep
# x-Axis Tilt
tilt <- theme(axis.text.x = element_text(angle = 60, hjust = 1))
fyear_cat <- aggregate(data[,"AMOUNT"], list(data$AUDITYEAR, data$category), sum)
names(fyear_cat) <- c("Year", "Sector", "AMOUNT")
fyear_cat_inc <- merge(fyear_cat, annual_income.pc[annual_income.pc$Year %in% c(2005:2009),], by = c("Year"), all = TRUE, sort = FALSE)
ggplot(fyear_cat, aes(x=Year, y=AMOUNT)) +  geom_bar(stat="identity")+tilt +ggtitle("Total AMOUNT by Year")
ggplot(fyear_cat, aes(x=Sector, y=AMOUNT)) +  geom_bar(stat="identity")+tilt + ggtitle("Total AMOUNT by Sector")
ggplot(fyear_cat, aes(x=Year, y=AMOUNT, fill=as.factor(Sector))) + geom_bar(stat="identity") + facet_grid(.~ as.factor(Sector))+tilt +ggtitle("Total AMOUNT by Year and Sector")
ggplot(annual_income.pc[annual_income.pc$Year %in% c(2005:2009),], aes(x=Year, y=`Annual Income Per Capita`)) +  geom_bar(stat="identity")+tilt +ggtitle("Median Income Per Capita by Year")
fstate <- aggregate(data[,"AMOUNT"], list(data$STATE), sum)
names(fstate) <- c("State","AMOUNT")
pop.state <- socio[,c(1,2,7)]
names(pop.state) <- c("State", "Year", "Population")
fstate_inc <- merge(fstate, pop.state, by = c("State"), all = FALSE, sort = FALSE)
fstate_inc$ratio <- fstate_inc$AMOUNT / fstate_inc$Population
fstate_inc <- fstate_inc[order(-fstate_inc$ratio),]
fstate_inc[1:20,]
tail(fstate_inc)
#ggplot(fstate_year, aes(x=Year, y=adj.amount, group=State, colour=State)) + geom_line()+ggtitle("adj.amount by Year and State")
fstate_year <- aggregate(data[,"AMOUNT"], list(data$STATE, data$AUDITYEAR), sum)
names(fstate_year) <- c("State", "Year", "AMOUNT")
pop.state <- socio[,c(1,2,7)]
names(pop.state) <- c("State", "Year", "Population")
fstate_year_inc <- merge(fstate_year, pop.state, by = c("State", "Year"), all = FALSE, sort = FALSE)
fstate_year_inc$ratio <- fstate_year_inc$AMOUNT / fstate_year_inc$Population
fstate_year_inc <- fstate_year_inc[order(-fstate_year_inc$ratio),]
fstate_year_inc[1:20,]
tail(fstate_year_inc)
#ggplot(fstate_year, aes(x=Year, y=adj.amount, group=State, colour=State)) + geom_line()+ggtitle("adj.amount by Year and State")
summary(fstate_year_inc)
summary(data)
fstate_year_cat <- aggregate(data[,"adj.amount"], list(data$STATE, data$AUDITYEAR, data$category), sum)
names(fstate_year_cat) <- c("State","Year", "Sector", "adj.amount")
ggplot(fstate_year_cat, aes(x=Year, y=adj.amount, group=State, colour=State)) + geom_line()+ggtitle("adj.amount by Year and State") + facet_grid(Sector~.) +tilt
fstate_year_cat_inc <- merge(fstate_year_cat, income.pc, by = c("State", "Year"), all = TRUE, sort = FALSE)
ggplot(usa, aes(x=variable, y=value, group=Description, colour=Description)) + geom_line() + facet_grid(as.factor(Description)~., scale="free_y") + ggtitle("USA") + labs(x="Year", y="Value") + tilt
names(data)
mdata <- melt(data, id=c("AUDITYEAR", "STATE","AMOUNT","TOTFEDEXPEND","DOLLARTHRESHOLD","TYPEREPORT_FS", "category"))
# TOTEXPEND vs YEAR by STATE
# Barchart
#Log Federal Expenditure BY STATE
ggplot(subset(mdata, STATE %in% levels(data$STATE) [1:20]), aes(x=as.factor(AUDITYEAR), y=AMOUNT, colour=AUDITYEAR)) + geom_boxplot() + facet_wrap(~STATE, nrow=3) + theme(axis.text.x = element_text(angle = 60, hjust = 1)) + labs(x="Year", y="Total Federal Expenditure")
ggplot(subset(mdata, STATE %in% levels(data$STATE) [21:40]), aes(x=as.factor(AUDITYEAR), y=AMOUNT, colour=AUDITYEAR)) + geom_boxplot() + facet_wrap(~STATE, nrow=3) + theme(axis.text.x = element_text(angle = 60, hjust = 1)) + labs(x="Year", y="Total Federal Expenditure")
ggplot(subset(mdata, STATE %in% levels(data$STATE) [41:69]), aes(x=as.factor(AUDITYEAR), y=AMOUNT, colour=AUDITYEAR)) + geom_boxplot() + facet_wrap(~STATE, nrow=3) + theme(axis.text.x = element_text(angle = 60, hjust = 1)) + labs(x="Year", y="Total Federal Expenditure")
names(data)
```{r, message=FALSE, warning=FALSE}
#PC
# Pre-Processing
require(XLConnect)
require(knitr)
require(plyr)
# require(dplyr)
require(stringr)
require(reshape2)
require(ggplot2)
# Directory
setwd("C:/Users/Nicol/Google Drive/Learning/R Programming/Phase 1/Data")
# setwd("~/Google Drive/Learning/R Programming/Phase 1/Data")
fund <- read.csv("federalfunds.csv", header=TRUE) # Federal Fund Dataset
df.names <- readWorksheetFromFile("federalfundstxtheader.xlsx", sheet=1)
ag.key <- readWorksheetFromFile("federalfundsagencykey.xlsx", sheet=1) # AK
ag.key.cat <- readWorksheetFromFile("federalfundsagencykey.xlsx", sheet=2)
key <- readWorksheetFromFile("federalfundskey.xls", sheet=1)
sample <- read.csv("samplesocecodata.csv", header=FALSE)
# Add Column Names to FUND
names(fund) <- names(df.names)
#Agency Fund
ag.key$cat.name <- unlist(lapply(ag.key[,6], function(x) ag.key.cat$Category.Name[match(x, ag.key.cat$Category.Number)]))
#Socio-Economic Data
names(sample) <- as.character(sample[5,])
sample <- sample[-c(1:5),]
names(sample)[1:4] <- c("GeoFips","Geoname", "Linecode","Description")
ag.key$first2 <- substr(ag.key$CFDANumber,1,2)
ag.key$first6 <- substr(ag.key$CFDANumber,1,6)
fund$first2 <- str_sub(fund$CFDA,1,2)
fund$first6 <- str_sub(fund$CFDA,1,6)
ag <- ag.key[,c(7,9,2)]
names(ag) [3] <- "title"
fd <- fund[,c(46,43,6)]
names(fd) [3] <- "title"
fd$cat <- unlist(lapply(fd$first6, function(x) ag$cat.name[match(x, ag$first6)]))
fd$cat1 <- unlist(lapply(fd$title, function(x) ag$cat.name[match(x, ag$title)]))
fund$category <- ifelse(is.na(fd$cat), fd$cat1, fd$cat)
fund$category <- as.factor(fund$category)
# test1 <- within(fd, fcat <- ifelse(is.na(fd$cat), fd$cat1, fd$cat))
summary(fund$category)
names(fund)
nocat <- data[,-c("category")]
data <- fund[,c("TOTFEDEXPEND", "R.D", "AMOUNT","DIRECT","MAJORPROGRAM","TYPEREPORT_MP","ARRA","TYPEREPORT_FS","GOINGCONCERN","REPORTABLECONDITION","MATERIALWEAKNESS","MATERIALNONCOMPLIANCE","DUP_REPORTS","DOLLARTHRESHOLD","LOWRISK","REPORTABLECONDITION_MP","MATERIALWEAKNESS_MP","QCOSTS","CYFINDINGS", "AUDITYEAR", "STATE","category")]
data[,c("TYPEREPORT_MP", "ARRA", "MATERIALNONCOMPLIANCE", "MATERIALWEAKNESS")] <- NULL
nocat <- data[,-c("category")]
nocat <- data[,-"category"]
names(data)
nocat <- data[,-c(18)]
nocat[nocat=="\\N"] = NA
nocat$AUDITYEAR<- as.factor(data$nocat)
nocat <- data[,-c(18)]
nocat[nocat=="\\N"] = NA
nocat$AUDITYEAR<- as.factor(nocat$AUDITYEAR)
nocat <- droplevels(nocat)
nocat <- na.omit(nocat)
write.csv(nocat,file="nocat.csv")
head(nocat)
nrow(nocat)
nrow(data)
data[data=="\\N"] = NA
data$AUDITYEAR<- as.factor(data$AUDITYEAR)
data <- droplevels(data)
data <- na.omit(data)
nrow(data)
head(nocat)
nocat <- read.csv("fullfund.csv")
nocat <- read.csv("nocat.csv")
nocat <- read.csv("nocat.csv")
names(nocat)
nocat <- nocat[,-X]
nocat <- nocat[,-"X""]
mdata <- melt(nocat, id=c("AUDITYEAR", "STATE","AMOUNT","TOTFEDEXPEND","DOLLARTHRESHOLD","TYPEREPORT_FS", "category"))
nocat <- subset(nocat, select=-c("X"))
nocat <- subset(nocat, select=-c(x))
nocat <- subset(nocat, select=-c(X))
names(nocat)
mdata <- melt(nocat, id=c("AUDITYEAR", "STATE","AMOUNT","TOTFEDEXPEND","DOLLARTHRESHOLD","TYPEREPORT_FS", "category"))
mdata <- melt(nocat, id=c("AUDITYEAR", "STATE","AMOUNT","TOTFEDEXPEND","DOLLARTHRESHOLD","TYPEREPORT_FS"))
head(mdata)
levels(mdata$variable)
ggplot(subset(mdata, STATE %in% levels(data$STATE) [1:20]), aes(x=as.factor(AUDITYEAR), y=AMOUNT, colour=AUDITYEAR)) + geom_boxplot() + facet_wrap(~STATE, nrow=3) + theme(axis.text.x = element_text(angle = 60, hjust = 1)) + labs(x="Year", y="Total Federal Expenditure")
names(mdata)
ggplot(subset(mdata, STATE %in% levels(mdata$STATE) [1:20]), aes(x=as.factor(AUDITYEAR), y=AMOUNT, colour=AUDITYEAR)) + geom_boxplot() + facet_wrap(~STATE, nrow=3) + theme(axis.text.x = element_text(angle = 60, hjust = 1)) + labs(x="Year", y="Total Federal Expenditure")
mdata$AUDITYEAR <-as.factor(mdata$AUDITYEAR)
ggplot(subset(mdata, STATE %in% levels(mdata$STATE) [21:40]), aes(x=as.factor(AUDITYEAR), y=AMOUNT, colour=AUDITYEAR)) + geom_boxplot() + facet_wrap(~STATE, nrow=3) + theme(axis.text.x = element_text(angle = 60, hjust = 1)) + labs(x="Year", y="Total Federal Expenditure")
ggplot(mdata, aes(x=AMOUNT, colour=AUDITYEAR)) + geom_density(size=1.5) + ggtitle("Distribution Of Expenditure by Year")
names(usa)
ggplot(mdata, aes(x=AMOUNT, colour=AUDITYEAR)) + geom_density(size=1.5) + ggtitle("Distribution Of Expenditure by Year")
ggplot(data, aes(x=as.factor(AUDITYEAR), y=AMOUNT, fill=as.factor(AUDITYEAR))) + geom_boxplot()
# Directory
setwd("C:/Users/Nicol/Google Drive/Learning/R Programming/Phase 1/Data")
# setwd("~/Google Drive/Learning/R Programming/Phase 1/Data")
# data <- read.csv("minifundcat.csv")
data <- read.csv("fullfundcat.csv")
#Socio-Economic Data
sample <- read.csv("samplesocecodata.csv", header=FALSE)
names(sample) <- as.character(sample[5,])
sample <- sample[-c(1:5),]
names(sample)[1:4] <- c("GeoFips","Geoname", "Linecode","Description")
sample <- droplevels(sample)
#USA
usa <- melt(subset(sample, Geoname == "United States"), id=c("GeoFips","Geoname","Linecode", "Description"))
#Fixing State Names
sample$Geoname <- revalue(sample$Geoname, c("Alaska*"="Alaska", "Hawaii*"="Hawaii"))
sample <- sample[! sample$Geoname %in% c("Rocky Mountain", "Far West", "Great Lakes","Mideast", "Southeast","Southwest","Plains", "United States","", "New England", "Rhode Island", "District of Columbia"),]
sample <- droplevels(sample)
# Convert from Name to Abbreviation
n <- NROW(sample$Geoname)
for(x in 1:n) {
sample$Abb[x] <- state.abb[grep(sample$Geoname[x], state.name)]
}
# sample[,c("Abb", "Geoname")]
# Melt
m.sample <- melt(sample, id=c("GeoFips","Geoname","Linecode", "Description", "Abb"))
head(m.sample)
# Dcast
names(m.sample)[names(m.sample) == 'Geoname'] <- 'STATE'
names(m.sample)[names(m.sample) == 'variable'] <- 'AUDITYEAR'
socio <- dcast(m.sample[,-3], Abb + AUDITYEAR + GeoFips + STATE ~ Description)
names(socio)[c(1,4,5,6,7)] <- c("STATE", "Geoname","Capita Income", "Personal_income", "Population")
head(socio)
# Add Socio Economic data to Fund Dataset
data <- merge(data, socio[socio$AUDITYEAR %in% c(2005:2009),], by = c("STATE", "AUDITYEAR"), all = TRUE, sort = FALSE)
data <- na.omit(data)
data$adj.amount <- data$AMOUNT/data$Population
head(data)
# State Year Per Capita Income
income.pc <- socio[,c(1,2,5)]
names(income.pc) [c(1:2)] <- c("State", "Year")
# Average Income by Year
annual_income.pc <- aggregate(income.pc$`Capita Income`, list(income.pc$Year), mean)
names(annual_income.pc) <- c("Year","Annual Income Per Capita")
head(annual_income.pc)
names(data)
# ggplot2 prep
# x-Axis Tilt
tilt <- theme(axis.text.x = element_text(angle = 60, hjust = 1))
fyear_cat <- aggregate(data[,"AMOUNT"], list(data$AUDITYEAR, data$category), sum)
names(fyear_cat) <- c("Year", "Sector", "AMOUNT")
fyear_cat_inc <- merge(fyear_cat, annual_income.pc[annual_income.pc$Year %in% c(2005:2009),], by = c("Year"), all = TRUE, sort = FALSE)
ggplot(fyear_cat, aes(x=Year, y=AMOUNT)) +  geom_bar(stat="identity")+tilt +ggtitle("Total AMOUNT by Year")
ggplot(fyear_cat, aes(x=Sector, y=AMOUNT)) +  geom_bar(stat="identity")+tilt + ggtitle("Total AMOUNT by Sector")
ggplot(fyear_cat, aes(x=Year, y=AMOUNT, fill=as.factor(Sector))) + geom_bar(stat="identity") + facet_grid(.~ as.factor(Sector))+tilt +ggtitle("Total AMOUNT by Year and Sector")
ggplot(annual_income.pc[annual_income.pc$Year %in% c(2005:2009),], aes(x=Year, y=`Annual Income Per Capita`)) +  geom_bar(stat="identity")+tilt +ggtitle("Median Income Per Capita by Year")
fstate <- aggregate(data[,"AMOUNT"], list(data$STATE), sum)
names(fstate) <- c("State","AMOUNT")
pop.state <- socio[,c(1,2,7)]
names(pop.state) <- c("State", "Year", "Population")
fstate_inc <- merge(fstate, pop.state, by = c("State"), all = FALSE, sort = FALSE)
head(socio)
pop.state <- socio[,c(1,2,6,7)]
names(pop.state) <- c("State", "Year", "Capita_Income","Population")
head(pop.state)
fstate_year <- aggregate(data[,"AMOUNT"], list(data$STATE, data$AUDITYEAR), sum)
names(fstate_year) <- c("State", "Year", "AMOUNT")
fstate_year_inc <- merge(fstate_year, pop.state, by = c("State", "Year"), all = FALSE, sort = FALSE)
head(fstate_year_inc)
fstate_year_inc$ratio <- (fstate_year_inc$AMOUNT / fstate_year_inc$Population)/fstate_year_inc$Capita_Income
fstate_year_inc <- fstate_year_inc[order(-fstate_year_inc$ratio),]
fstate_year_inc[1:20,]
tail(fstate_year_inc)
View(fstate_year_inc)
summary(data$ratio)
summary(fstate_year_inc$ratio)
View(fstate_year_inc)
fstate_year_inc$amoun_capita <- (fstate_year_inc$AMOUNT / fstate_year_inc$Population)
fstate_year_inc$amount_capita <- (fstate_year_inc$AMOUNT / fstate_year_inc$Population)
fstate_year_inc$ratio <- fstate_year_inc$amount_capita /fstate_year_inc$Capita_Income
head(socio)
pop.state <- socio[,c(1,2,5,7)]
names(pop.state) <- c("State", "Year", "Capita_Income","Population")
fstate_year <- aggregate(data[,"AMOUNT"], list(data$STATE, data$AUDITYEAR), sum)
names(fstate_year) <- c("State", "Year", "AMOUNT")
fstate_year_inc <- merge(fstate_year, pop.state, by = c("State", "Year"), all = FALSE, sort = FALSE)
fstate_year_inc$amount_capita <- (fstate_year_inc$AMOUNT / fstate_year_inc$Population)
fstate_year_inc$ratio <- fstate_year_inc$amount_capita /fstate_year_inc$Capita_Income
fstate_year_inc <- fstate_year_inc[order(-fstate_year_inc$ratio),]
fstate_year_inc$ratio <- (fstate_year_inc$amount_capita /fstate_year_inc$Capita_Income)*100
summaryBy(ratio~Year+State, data =fstate_year_inc, FUN=summary_fun)
library("doBy")
test <- summaryBy(ratio~Year+State, data =fstate_year_inc, FUN=summary_fun)
summary_fun <- function(x){c(length(x), min(x), mean(x), max(x), sd(x))}
test <- summaryBy(ratio~Year+State, data =fstate_year_inc, FUN=summary_fun)
test
summary_fun <- function(x){c(min(x), mean(x), max(x), range(x), sd(x))}
test <- summaryBy(ratio~Year+State, data =fstate_year_inc, FUN=summary_fun)
test
ggplot(mdata, aes(x=interaction(value,as.factor(AUDITYEAR)), y=AMOUNT,fill=value)) + geom_boxplot()+ facet_wrap(~variable, nrow=3)+ ggtitle("AMOUNT Distribution by Binary Variable and Year")+ theme(axis.text.x = element_text(angle = 60, hjust = 1))
require(XLConnect)
require(knitr)
require(plyr)
# require(dplyr)
require(stringr)
require(reshape2)
require(ggplot2)
# Directory
setwd("C:/Users/Nicol/Google Drive/Learning/R Programming/Phase 1/Data")
# setwd("~/Google Drive/Learning/R Programming/Phase 1/Data")
# data <- read.csv("minifundcat.csv")
data <- read.csv("fullfundcat.csv")
#Socio-Economic Data
sample <- read.csv("samplesocecodata.csv", header=FALSE)
names(sample) <- as.character(sample[5,])
sample <- sample[-c(1:5),]
names(sample)[1:4] <- c("GeoFips","Geoname", "Linecode","Description")
sample <- droplevels(sample)
#USA
usa <- melt(subset(sample, Geoname == "United States"), id=c("GeoFips","Geoname","Linecode", "Description"))
#Fixing State Names
sample$Geoname <- revalue(sample$Geoname, c("Alaska*"="Alaska", "Hawaii*"="Hawaii"))
sample <- sample[! sample$Geoname %in% c("Rocky Mountain", "Far West", "Great Lakes","Mideast", "Southeast","Southwest","Plains", "United States","", "New England", "Rhode Island", "District of Columbia"),]
sample <- droplevels(sample)
# Convert from Name to Abbreviation
n <- NROW(sample$Geoname)
for(x in 1:n) {
sample$Abb[x] <- state.abb[grep(sample$Geoname[x], state.name)]
}
# sample[,c("Abb", "Geoname")]
# Melt
m.sample <- melt(sample, id=c("GeoFips","Geoname","Linecode", "Description", "Abb"))
head(m.sample)
# Dcast
names(m.sample)[names(m.sample) == 'Geoname'] <- 'STATE'
names(m.sample)[names(m.sample) == 'variable'] <- 'AUDITYEAR'
socio <- dcast(m.sample[,-3], Abb + AUDITYEAR + GeoFips + STATE ~ Description)
names(socio)[c(1,4,5,6,7)] <- c("STATE", "Geoname","Capita Income", "Personal_income", "Population")
head(socio)
# Add Socio Economic data to Fund Dataset
data <- merge(data, socio[socio$AUDITYEAR %in% c(2005:2009),], by = c("STATE", "AUDITYEAR"), all = TRUE, sort = FALSE)
data <- na.omit(data)
data$adj.amount <- data$AMOUNT/data$Population
head(data)
# State Year Per Capita Income
income.pc <- socio[,c(1,2,5)]
names(income.pc) [c(1:2)] <- c("State", "Year")
# Average Income by Year
annual_income.pc <- aggregate(income.pc$`Capita Income`, list(income.pc$Year), mean)
names(annual_income.pc) <- c("Year","Annual Income Per Capita")
head(annual_income.pc)
names(data)
# ggplot2 prep
# x-Axis Tilt
tilt <- theme(axis.text.x = element_text(angle = 60, hjust = 1))
fyear_cat <- aggregate(data[,"AMOUNT"], list(data$AUDITYEAR, data$category), sum)
names(fyear_cat) <- c("Year", "Sector", "AMOUNT")
fyear_cat_inc <- merge(fyear_cat, annual_income.pc[annual_income.pc$Year %in% c(2005:2009),], by = c("Year"), all = TRUE, sort = FALSE)
ggplot(fyear_cat, aes(x=Year, y=AMOUNT)) +  geom_bar(stat="identity")+tilt +ggtitle("Total AMOUNT by Year")
ggplot(fyear_cat, aes(x=Sector, y=AMOUNT)) +  geom_bar(stat="identity")+tilt + ggtitle("Total AMOUNT by Sector")
ggplot(fyear_cat, aes(x=Year, y=AMOUNT, fill=as.factor(Sector))) + geom_bar(stat="identity") + facet_grid(.~ as.factor(Sector))+tilt +ggtitle("Total AMOUNT by Year and Sector")
ggplot(annual_income.pc[annual_income.pc$Year %in% c(2005:2009),], aes(x=Year, y=`Annual Income Per Capita`)) +  geom_bar(stat="identity")+tilt +ggtitle("Median Income Per Capita by Year")
##Creating a summary function to better explain data #GOLD METHOD
library("doBy")
summary_fun <- function(x){c(min(x), mean(x), max(x), range(x), sd(x))}
fstate <- aggregate(data[,"AMOUNT"], list(data$STATE), sum)
names(fstate) <- c("State","AMOUNT")
head(socio)
pop.state <- socio[,c(1,2,5,7)]
names(pop.state) <- c("State", "Year", "Capita_Income","Population")
fstate_inc <- merge(fstate, pop.state, by = c("State"), all = FALSE, sort = FALSE)
fstate_inc$ratio <- fstate_inc$AMOUNT / fstate_inc$Population
fstate_inc <- fstate_inc[order(-fstate_inc$ratio),]
fstate_inc[1:20,]
tail(fstate_inc)
#ggplot(fstate_year, aes(x=Year, y=adj.amount, group=State, colour=State)) + geom_line()+ggtitle("adj.amount by Year and State")
fstate_year <- aggregate(data[,"AMOUNT"], list(data$STATE, data$AUDITYEAR), sum)
names(fstate_year) <- c("State", "Year", "AMOUNT")
fstate_year_inc <- merge(fstate_year, pop.state, by = c("State", "Year"), all = FALSE, sort = FALSE)
fstate_year_inc$amount_capita <- (fstate_year_inc$AMOUNT / fstate_year_inc$Population)
fstate_year_inc$ratio <- (fstate_year_inc$amount_capita /fstate_year_inc$Capita_Income)*100
fstate_year_inc <- fstate_year_inc[order(-fstate_year_inc$ratio),]
test <- summaryBy(ratio~Year+State, data =fstate_year_inc, FUN=summary_fun)
test
fstate_year_inc[1:20,]
tail(fstate_year_inc)
#ggplot(fstate_year, aes(x=Year, y=adj.amount, group=State, colour=State)) + geom_line()+ggtitle("adj.amount by Year and State")
summary(fstate_year_inc$ratio)
summary(data)
fstate_year_cat <- aggregate(data[,"adj.amount"], list(data$STATE, data$AUDITYEAR, data$category), sum)
names(fstate_year_cat) <- c("State","Year", "Sector", "adj.amount")
ggplot(fstate_year_cat, aes(x=Year, y=adj.amount, group=State, colour=State)) + geom_line()+ggtitle("adj.amount by Year and State") + facet_grid(Sector~.) +tilt
fstate_year_cat_inc <- merge(fstate_year_cat, income.pc, by = c("State", "Year"), all = TRUE, sort = FALSE)
names(usa)
ggplot(usa, aes(x=variable, y=value, group=Description, colour=Description)) + geom_line() + facet_grid(as.factor(Description)~., scale="free_y") + ggtitle("USA") + labs(x="Year", y="Value") + tilt
nocat <- read.csv("nocat.csv")
nocat <- subset(nocat, select=-c(X))
mdata <- melt(nocat, id=c("AUDITYEAR", "STATE","AMOUNT","TOTFEDEXPEND","DOLLARTHRESHOLD","TYPEREPORT_FS"))
mdata$AUDITYEAR <-as.factor(mdata$AUDITYEAR)
# TOTEXPEND vs YEAR by STATE
# Barchart
#Log Federal Expenditure BY STATE
ggplot(subset(mdata, STATE %in% levels(mdata$STATE) [1:20]), aes(x=as.factor(AUDITYEAR), y=AMOUNT, colour=AUDITYEAR)) + geom_boxplot() + facet_wrap(~STATE, nrow=3) + theme(axis.text.x = element_text(angle = 60, hjust = 1)) + labs(x="Year", y="Total Federal Expenditure")
ggplot(subset(mdata, STATE %in% levels(mdata$STATE) [21:40]), aes(x=as.factor(AUDITYEAR), y=AMOUNT, colour=AUDITYEAR)) + geom_boxplot() + facet_wrap(~STATE, nrow=3) + theme(axis.text.x = element_text(angle = 60, hjust = 1)) + labs(x="Year", y="Total Federal Expenditure")
ggplot(subset(mdata, STATE %in% levels(mdata$STATE) [41:69]), aes(x=as.factor(AUDITYEAR), y=AMOUNT, colour=AUDITYEAR)) + geom_boxplot() + facet_wrap(~STATE, nrow=3) + theme(axis.text.x = element_text(angle = 60, hjust = 1)) + labs(x="Year", y="Total Federal Expenditure")
#EXPEND Distribution by YEAR
ggplot(mdata, aes(x=AMOUNT, colour=AUDITYEAR)) + geom_density(size=1.5) + ggtitle("Distribution Of Expenditure by Year")
# EXPEND vs YEAR All Data
# Boxplot
# FED EXPEND
ggplot(data, aes(x=as.factor(AUDITYEAR), y=AMOUNT, fill=as.factor(AUDITYEAR))) + geom_boxplot()
#AMOUNT
ggplot(data, aes(x=as.factor(AUDITYEAR), y=AMOUNT)) + geom_boxplot()
# Understanding the BINARY Variables
ggplot(mdata, aes(AMOUNT, fill=value)) + geom_density(alpha=.3)+ facet_wrap(~variable, nrow=3)+ ggtitle("AMOUNT Distribution by Binary Variable")+ labs(y="Density", x="Log Federal Expenditure")
# add year Boxplot
ggplot(mdata, aes(x=interaction(value,as.factor(AUDITYEAR)), y=AMOUNT,fill=value)) + geom_boxplot()+ facet_wrap(~variable, nrow=3)+ ggtitle("AMOUNT Distribution by Binary Variable and Year")+ theme(axis.text.x = element_text(angle = 60, hjust = 1))
require("PerformanceAnalytics")
#chart.Correlation(data[,c(1,3,10)], histogram=TRUE, pch=19)
#pairs(data[,c(1,3,10)])
ggplot(subset(mdata, category=="Education"), aes(AMOUNT, fill=value)) + geom_density(alpha=.3)+ facet_wrap(~variable, nrow=3)+ ggtitle("Education Expenditure Distribution by Binary Variable")+ labs(y="Density", x="Log Federal Expenditure")
ggplot(subset(data, category=="Education"), aes(x=AMOUNT, colour=AUDITYEAR)) + geom_density(size=1.5) + ggtitle("Distribution Of Expenditure by Year")
ggplot(subset(mdata, category=="Education"), aes(x=AMOUNT, fill=value)) + geom_density(alpha=.3)+ facet_wrap(~variable, nrow=3)+ ggtitle("Education Expenditure Distribution by Binary Variable")+ labs(y="Density", x="Log Federal Expenditure")
ggplot(subset(data, category=="Education"), aes(x=AMOUNT, fill=value)) + geom_density(alpha=.3)+ facet_wrap(~variable, nrow=3)+ ggtitle("Education Expenditure Distribution by Binary Variable")+ labs(y="Density", x="Log Federal Expenditure")
ggplot(mdata, aes(x=AMOUNT, fill=value)) + geom_density(alpha=.3)+ facet_wrap(~variable, nrow=3)+ ggtitle("Education Expenditure Distribution by Binary Variable")+ labs(y="Density", x="Log Federal Expenditure")
names(test)
names(fstate_year_inc)
test <- aggregate(fstate_year_inc[,"ratio"], lits(fstate_year_inc$State,fstate_year_inc$Year), fUN=summary_fun)
test <- aggregate(fstate_year_inc[,"ratio"], lits(fstate_year_inc$State,fstate_year_inc$Year), summary_fun)
test <- aggregate(fstate_year_inc[,"ratio"], lits(fstate_year_inc$State,fstate_year_inc$Year), range)
test <- aggregate(fstate_year_inc[,"ratio"], list(fstate_year_inc$State,fstate_year_inc$Year), summary_fun)
test
head(tet)
head(test)
ratio_Stats <- aggregate(fstate_year_inc[,"ratio"], list(fstate_year_inc$State,fstate_year_inc$Year), summary_fun)
ratio_Stats <- aggregate(fstate_year_inc[,"ratio"], list(fstate_year_inc$State), summary_fun)
head(ratio_Stats)
summary_fun <- function(x){c(min(x), max, mean(x), sd(x))}
ratio_Stats <- aggregate(fstate_year_inc[,"ratio"], list(fstate_year_inc$State), summary_fun)
names(ratio_Stats) <- c("State", "Year", )
fstate_year_inc[1:20,]
head(ratio_Stats)
head(ratio_Stats)
summary_fun <- function(x){c(min(x), max(x), mean(x), sd(x))}
ratio_Stats <- aggregate(fstate_year_inc[,"ratio"], list(fstate_year_inc$State), summary_fun)
head(ratio_Stats)
head(ratio_Stats)
names(ratio_Stats) <- c("Year", "Min", "max","Mean","STDEV")
head(ratio_Stats)
ratio_Stats
names(ratio_Stats) <- c("Year", "Min", "Max","Mean","STDEV")
class(ratio_Stats)
colnames(ratio_Stats) <- c("Year", "Min", "Max","Mean","STDEV")
str(ratio_Stats)
ratio_Stats <- data.frame(aggregate(fstate_year_inc[,"ratio"], list(fstate_year_inc$State), summary_fun))
head(ratio_Stats)
str(ratio_Stats)
test <- summaryBy(ratio~Year, data=fstate_year_inc, FUN=summary_fun)
test
ratio_Stats <- summaryBy(ratio~Year, data=fstate_year_inc, FUN=summary_fun)
str(ratio_Stats)
names(ratio_Stats) <- c("Year", "Min", "Max","Mean","STDEV")
head(ratio_Stats)
ratio_Stats$range <- ratio_Stats$Max-ratio_Stats$Min
head(ratio_Stats)
ratio_Stats
ratio_State <- summaryBy(ratio~State, data=fstate_year_inc, FUN=summary_fun)
names(ratio_State) <- c("Year", "Min", "Max","Mean","STDEV")
ratio_State$range <- ratio_State$Max-ratio_State$Min
ratio_State
setwd("C:/Users/Nicol/Google Drive/Zillow")
setwd("C:/Users/Nicol/Google Drive/Zillow")
prop <- read.csv("properties_2016.csv")
str(prop)
prop <- read.csv("properties_2016.csv")
train <- read.csv("train_2016_v2.csv")
View(train)
head(prop)
names(prop)
summary(prop)
sample <- sample(1:nrow(prop), (.4)*nrow(prop), replace=FALSE)
data <- prop[sample,]
sample <- sample(1:nrow(prop), (.25)*nrow(prop), replace=FALSE)
sample <- sample(1:nrow(prop), (.25)*nrow(prop), replace=FALSE)
data <- prop[sample,]
rm(prop)
names(data)
summary(sample)
summary(data)
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
View(head(data))
View(data[1:100,])
names(data)
dict <- read.csv("dictionary.csv")
head(dict)
cat.dex <- dict[,2] == 1
cat.dex
data[,c(1,cat.dex)]
data[,cat.dex]
data[1:5,cat.dex]
cont.dex <- dict[,2] == 2
data[1:5,cont.dex]
View(dict)
dict <- read.csv("dictionary.csv",header=FALSE)
cat.dex <- dict[,2] == 1
data[1:5,cat.dex]
cont.dex <- dict[,2] == 2
data[1:5,cont.dex]
data.matrix <- rcorr(data[,cont.dex])
require(tidyverse)
require(corrplot)
data.matrix <- rcorr(data[,cont.dex])
require(PerformanceAnalytics)
require(Hmisc)
data.matrix <- rcorr(data[,cont.dex])
data.matrix <- cor(data[,cont.dex])
data.matrix
